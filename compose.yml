services:
  app-service:
    # TODO: change "letsgetrusty" to your Docker Hub username
    image: jirimon/app-service # specify name of image on Docker Hub
    restart: "always" # automatically restart container when server crashes
    environment: # set up environment variables
      AUTH_SERVICE_IP: ${AUTH_SERVICE_IP:-localhost} # Use localhost as the default value
    ports:
      - "8000:8000" # expose port 8000 so that applications outside the container can connect to it 
    depends_on: # only run app-service after auth-service has started
      auth-service:
        condition: service_started
    networks:
      - app-network
  
  auth-service:
    # TODO: change "letsgetrusty" to your Docker Hub username
    image: jirimon/auth-service
    restart: "always" # automatically restart container when server crashes
    ports:
      - "3000:3000" # expose port 3000 so that applications outside the container can connect to it 
    networks:
      - app-network
  
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - auth-service
    networks:
      - app-network
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email jiri.moninec@gmpautomation.cz --agree-tos --no-eff-email --staging -d auth.gmpautomation.cz 

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /root/views/
      o: bind

networks:
  app-network:
    driver: bridge